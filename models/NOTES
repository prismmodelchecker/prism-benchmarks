# Find all directories with (buildable) models, build them and store logs in each subdir
# (substitute 'prism-auto' and 'prism' with full paths if needed)

find dtmcs ctmcs mdps -type d -exec prism-auto -p prism -n -b {} -l {}/logs \;
find ptas -type d -exec prism-auto -p prism -n -b -x '-pf true' {} -l {}/logs \;
find smgs -type d -exec prism-auto -p prism-games -x "-javamaxmem 16g" -n -b {} -l {}/logs \;

# find dtmcs ctmcs mdps -type d -exec sh -c 'prism-auto -p prism -n -b $0 -l $0/logs' {} \;

# ---------------------------------------------------------------------------

# Extract model stats from the logs created above and put in models.csv files

# In individual files for each subdirectory

find . -type d -name logs -exec sh -c 'prism-log-extract $0 --non-recursive --extension=log --fields=model,model_type,states,time_constr >| $0/../models.csv' {} \;

# And collated in files at the top-level

prism-log-extract . --extension=log --fields=model,model_type,states,time_constr >| models.csv
prism-log-extract dtmcs --extension=log --fields=model,model_type,states,time_constr >| dtmcs/models.csv
prism-log-extract ctmcs --extension=log --fields=model,model_type,states,time_constr >| ctmcs/models.csv
prism-log-extract mdps --extension=log --fields=model,model_type,states,time_constr >| mdps/models.csv
prism-log-extract ptas --extension=log --fields=model,model_type,states,time_constr >| ptas/models.csv
prism-log-extract smgs --extension=log --fields=model,model_type,states,time_constr >| smgs/models.csv

# ---------------------------------------------------------------------------

To check model metadata is all ok, make sure these give the same output:

prism-auto -e . | wc
prism-auto -e . --filter-models='True' | wc
